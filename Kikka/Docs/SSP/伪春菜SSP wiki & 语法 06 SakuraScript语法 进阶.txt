这里的樱花语法(SakuraScript)是以 SSP 2.01.16 版本所拥有的所有语法为基准，提供各语法的说明与使用范例。注意，这里提供的语法列表是给进阶的开发者作为参考，如果你是新手的话，这篇SakuraScript文章中所介绍的语法已足够你大多数情况下的需求，可别被这里的进阶资料给吓到了。(笑)

．简介 
．人格操作 
◦\![embed,事件名称,Ref0,Ref1...] 
◦\![move,X座标,Y座标,(移动时间),(基准目标),(基准目标之基准点),(移动物之基准点)] 
◦\![raise,事件识别子,r0,r1,...,r7] 
◦\![raiseother,人格名称,事件识别子,r0,r1,r2,...] 
◦\![reload,重载对象] 
◦\![reloadsurface] 
◦\![updatebymyself] 
◦\![vanishbymyself] 
◦\- 
◦\4 
◦\5 
◦\b[ID] 
．作用域 
◦\0 
◦\1 
◦\h 
◦\p[ID] 
◦\u 
◦\_s 
◦\_s[ID1,ID2,ID3...] 
．对话表现 
◦\![*] 
◦\![quicksession,false] 
◦\![quicksession,true] 
◦\![set,autoscroll,disable] 
◦\![set,autoscroll,enable] 
◦\![set,balloonoffset,x,y] 
◦\![set,balloontimeout,时间] 
◦\![set,otherghosttalk,(true/false)] 
◦\&[ID] 
◦\c 
◦\f[strike,ture/false] 
◦\f[sub,true/false] 
◦\f[sup,true/false] 
◦\f[underline,ture/false] 
◦\n 
◦\w? 
◦\x 
◦\_b[档案路径,X座标,Y座标] 
◦\_n 
◦\_w[时间] 
◦\__w[时间] 
．选项按钮 
◦\![set,choicetimeout,时间] 
◦\* 
◦\q[事件识别子][选项内容] 
◦\q[选项内容,事件识别子,r1,r2,...] 
◦\z 
◦\_a[识别子] 
◦\__q[识别子,r1,r2,...]选项内容\__q 
．核心程式控制 
◦\![biff] 
◦\![bind,类型,名称,(true/false/0/1)] 
◦\![call,ghost,人格名称] 
◦\![change,balloon,对话框名称] 
◦\![change,ghost,人格名称] 
◦\![change,shell,外形名称] 
◦\![close,inputbox,ID] 
◦\![enter,inductionmode] 
◦\![enter,passivemode] 
◦\![execute,headline,线上新闻名称] 
◦\![execute,http-get,URL] 
◦\![executesntp] 
◦\![leave,inductionmode] 
◦\![leave,passivemode] 
◦\![open,balloonexplorer] 
◦\![open,calendar] 
◦\![open,communicatebox] 
◦\![open,configurationdialog] 
◦\![open,dateinput,事件识别子,(输入框逾时),(年),(月),(日)] 
◦\![open,ghostexplorer] 
◦\![open,headlinesensorexplorer] 
◦\![open,help] 
◦\![open,inputbox,事件识别子,(输入框逾时),(预设字串)] 
◦\![open,messenger] 
◦\![open,rateofusegraphballoon] 
◦\![open,rateofusegraphtotal] 
◦\![open,rateofusegraph] 
◦\![open,readme] 
◦\![open,shellexplorer] 
◦\![open,sliderinput,事件识别子,(输入框逾时),(现在值),(最小),(最大)] 
◦\![open,surfacetest] 
◦\![open,teachbox] 
◦\![open,timeinput,事件识别子,输入框逾时,时,分,秒] 
◦\![set,windowstate,!stayontop] 
◦\![set,windowstate,minimize] 
◦\![set,windowstate,stayontop] 
◦\![update,platform] 
◦\+ 
◦\6 
◦\v 
◦\_+ 
◦\__t 
．字形颜色 
◦\f[bold,true/false] 
◦\f[color,R,G,B] 
◦\f[cursorcolor,R,G,B] or \f[cursorbrushcolor,R,G,B] 
◦\f[cursorfontcolor,R,G,B] 
◦\f[cursormethod,描绘方法] 
◦\f[cursorpencolor,R,G,B] 
◦\f[cursorstyle,类型] 
◦\f[default] 
◦\f[height,数字] 
◦\f[italic,true/false] 
◦\f[name,字形名称] 
◦\f[shadowcolor,R,G,B] 
．音效 
◦\![sound,cdplay,音轨No.] 
◦\![sound,loop,档案路径] 
◦\![sound,pause] 
◦\![sound,play,档案路径] 
◦\![sound,resume] 
◦\![sound,stop] 
◦\![sound,wait] 
◦\8[档案路径] 
◦\_V 
◦\_v[档案路径] 
．系统操作 
◦\![open,browser,URL] 
◦\![open,file,档案名称] 
◦\![open,mailer,(参数)] 
◦\![set,wallpaper,档案路径] 
◦\![set,trayballoon,(Option),(Option),...] 
◦\![set,trayicon,图示所在路径] 
◦\j[URL] 
◦\m[讯息,WPARAM,LPARAM] 
．全体控制 
◦\e 
◦\t 
◦\_! 
◦\_? 
◦\_l[x座标,y座标] 
◦\_m[?] 
◦\_q 
◦\_u[?] 
．动画绘图 
◦\![anim,clear,ID] 
◦\![anim,offset,ID,X座标,Y座标] 
◦\![anim,pause,ID] 
◦\![anim,resume,ID] 
◦\![lock,repaint] 
◦\![set,alignmenttodesktop,位置] 
◦\![set,alpha,不透明度%] 
◦\![set,scaling] 
◦\![unlock,repaint] 
◦\i[ID] or \i? 
◦\s[ID] 
．插件操作 
◦\![raiseplugin,外挂ID,事件识别子,r0,r1,r2...] 
◦\![raiseplugin,外挂名称,事件识别子,r0,r1,r2...] 

人格操作 

\![embed,事件名称,Ref0,Ref1...] 
．使用者定义事件结果置入
以与\![raise]指令相同要领的方式使之执行后，会将此事件结果置入现在执行中的脚本当中，并且继续执行此脚本。与\![raise]指令不同之处，在于被置入的脚本也包含在此次的执行序当中。因此，我们将更加容易实现某些功能，像是使用\![embed]指令来执行其他情报取得系的指令，并藉其资讯来改变此脚本的内容。


\![move,X座标,Y座标,(移动时间),(基准目标),(基准目标之基准点),(移动物之基准点)] 
．移动人格图像
根据指定的参数来移动人格图像。移动时间以后的参数可省略。X座标、Y座标为目的地座标，可以为负值。如果要省略某一项的话，可以指定为“fix”，就会保留原座标。
移动时间以毫秒为单位，省略时则直接显示在目标位置上。基准目标是在以其他角色的所在位置为基准，来进行相对的座标移动。
指定方法为输入角色ID，例如指定0时即以主菜为基准物，指定1时则以副菜为基准物，以下皆同。以自己为基准物时为“me”，以荧幕为基准物时为“screen”。省略时预设为“screen”。
基准点会决定指定基准物的座标原点，以“X基准.Y基准”的形式来指定。各形式有以下几种类型：

X座标 - left,right,base,center。
Y座标 - top,bottom,base,center。

各有四种关键字，用法如“right.top”这样来指定图片右上方为原点。另外，base是根据surface.txt内的point.basepos值来决定原点。省略时预设为left.top。另外，指定screen的情况下不可使用base。移动物的基准点设定法与目标设法一置。

范例：

\0\s[0]移动一。\![move,100,100]\e
移动一：图像瞬间移动到桌面左上(100,100)的位置。
\0\s[0]移动二。\![move,200,fix]\e
移动二：图像的X轴瞬间移到桌面左边数来200像素的位置。
\0\s[0]移动三。\![move,100,100,600]\e
移动三：用0.6秒的时间移动到桌面(100,100)的位置。
\0\s[0]移动四。\![move,-100,100,,screen,right.top]\e
移动四：瞬间移动到桌面右上向左100像素、向下100像素的位置。
\0\s[0]移动五。\![move,100,,500,me]\e
移动五：图像在0.5秒内右移100像素。
\0\s[0]移动六。\![move,0,0,0,1,right.bottom,left.bottom]\e
移动六：图像瞬间移动到角色1(副菜)的右方。
\0\s[0]移动七。\![move,100,,500,1]\e
移动七：图像在0.5秒移动到距角色1(副菜)右方100像素的位置。

\![raise,事件识别子,r0,r1,...,r7] 
．触发使用者事件
会触发识别子所指定的事件，其后的引数则依序被作为被触发事件的reference0、reference1、…。

范例：

\![raise,OnUserEvent,参照一,参照二]
事件“OnUserEvent”发生，reference0=“参照一”，reference1=“参照二”。
\![raiseother,人格名称,事件识别子,r0,r1,r2,...] 
．触发其他人格之使用者事件
以自己以外的启动中人格作为对象，遥控触发其事件。识别子后的引数会被作为事件的参照(reference)。人格名称有以下特殊名称：

__SYSTEM_ALL_GHOST__ - 表示自己以外的所有人格。

范例：

\![raiseother,Emily,OnUserEvent,参照一,参照二]\e
名为“Emily”的人格会触发“OnUserEvent”事件，且reference0=“参照一”，reference1=“参照二”。
\![reload,重载对象] 
．重新载入
对人格的各模组进行重新载入的工作。重载对象有以下四种：

shiori - 仅限SHIORI重载，便于查看变更辞书后的结果。
makoto - 仅限MAKOTO重载，现已鲜少使用。
shell - 仅限SHELL重载。
ghost - 人格全体重新载入(包含上述三者)。

范例：

\![reload,shiori]
伪AI辞书重新载入。
\![reloadsurface] 
．重新载入图像
重新载入图像资料。SSP时与\![reload,surface]指令执行相同的工作。


\![updatebymyself] 
．人格自我更新
开始进行人格本体的更新工作，并引发OnUpdate系列的事件。
SSP下可使用\![updatebymyself,checkonly]语法指令，会确认是否有更新但不会执行更新的动作，根据其结果引发OnUpdateCheckComplete或OnUpdateCheckFailure事件。


\![vanishbymyself] 
．人格自我移除
执行此指令后，目前启动中的人格会被删除。


\- 
．人格终了
人格终了。要注意的是，当有复数人格被使用的时候，核心程式并不会终止。请务必在OnClose事件使用此指令，确实终止人格的运行。另外为了让使用者来得及读取其对话，建议插入一些等待指令。

范例：

\0\s[0]人格关闭中…\w8\-
显示“人格关闭中…”后，人格终了。
\4 
．角色分离
目前所在作用域的角色往远离其他角色的方向移动。

范例：

\0\s[0]\1\s[10]准备离开。\4离开了。\e
使魔端显示“准备离开。”后，稍微移动位置，再显示“离开了。”。
\5 
．角色靠近
目前所在作用域的角色往靠近其他角色的方向移动。

范例：

\0\s[0]\1\离开。\4\4\4\4接近。\5\e
使魔端显示“离开。”后，远离春菜端，显示“接近。”后又往春菜端靠近。
\b[ID] 
．切换对话框
根据ID编号来切换目前作用域所使用的对话框。ID指定-1时不显示对话框。一般来说\b[2]为加大的对话框，在读取线上新闻或内容较长的文章时建议使用此种对话框。奇数ID预定为右侧显示对话框，核心程式会自行根据人格位置来自动转换，因此在使用时请务必指定偶数ID。

范例：

\b[2]这是比一般对话框还大的对话框。
显示“这是比一般对话框还大的对话框。”。
作用域 

\0 
．切换至春菜端作用域
将作用域切换到主侧人格角色。接下来的文字、对话都会显示在春菜端的对话框上。等同于\p[0]、\h。

范例：

\0你好。
春菜端的对话框显示“你好。”。
\1 
．切换至使魔端作用域
将作用域切换到副侧人格角色。接下来的文字、对话都会显示在使魔端的对话框上。等同于\p[1]、\u。

范例：

\1你好。
使魔端的对话框显示“你好。”。
\h 
．切换至春菜端作用域(旧规格)
将作用域切换到主侧人格角色。接下来的文字、对话都会显示在春菜端的对话框上。由于此语法属于旧规格，建议改用\0。

范例：

\h你好。
春菜端的对话框显示“你好。”。
\p[ID] 
．泛用作用域变更
将目前的作用域换成指定ID的作用域。ID为2以后的角色作用域都必须使用此指令来指定。\p[0] = \0 = \h，\p[1] = \1 = \u。


\u 
．切换至使魔端作用域(旧规格)
将作用域切换到副侧人格角色。接下来的文字、对话都会显示在使魔端的对话框上。由于此语法属于旧规格，建议改用\1。

范例：

\u你好。
使魔端的对话框显示“你好。”。
\_s 
．合声对话
以此指令所包围的字串会同时被春菜端跟使魔端念出来。

范例：

\0\s[0]\_s两边一起显示。\_s一边显示。\e
“两边一起显示。”会同时在两边的对话框中显示出来，而“一边显示。”则只会显示在春菜端的对话框上。
\_s[ID1,ID2,ID3...] 
．多人合声
以此指令所包围的字串会同时被指定作用域的角色们念出来。

范例：

\0\s[0]\_s[0,1]两边一起显示。\_s一边显示。\e
“两边一起显示。”会同时在春菜端及使魔端的对话框中显示出来，而“一边显示。”则只会显示在春菜端的对话框上。
对话表现 

\![*] 
．标志
在游标所在位置上显示对话框指定的SSTP标志图示，较常使用的情况是将其放在选项的前端来排版。

范例：

\0\s[0]\![*]←这个图示就是标志。
显示了一个标志后，随即印出“←这个图示就是标志”字串。
\![quicksession,false] 
．停止速读
停止速读模式，文字显示速度回复常速。与\_q指令不同的是，此指令直接修改对话的预设值，而非在ON/OFF之间开开关关。


\![quicksession,true] 
．启用速读
启用速读模式，文字会一口气显示完毕，而不会一字一字的输出。与\_q指令不同的是，此指令直接修改对话的预设值，而非在ON/OFF之间开开关关。


\![set,autoscroll,disable] 
．禁止对话框自动卷动
使目前作用域的对话框不会跟随对话的进行而自动下向卷动，但手动卷动仍然有效。适合用于隐藏某些内容时使用。此指令的有效范围仅限于此次的樱语脚本。

范例：

\0\s[0]\1\s[10]\![set,autoscroll,disable]0\n1\n2\n3\n4\n5\n6\n\e
在使魔端的对话框上显示行数。然而由于自动卷动被禁止，5与6并不会显示出来。
\![set,autoscroll,enable] 
．许可对话框自动卷动
将\![set,autoscroll,disable]指令所禁止的自动卷动功能重新启用。

范例：

\0\s[0]\1\s[10]\![set,autoscroll,disable]0\n1\n2\n3\n4\n5\n6\n\w9\![set,autoscroll,enable]7\n8\e
在使魔端的对话框上显示行数。一开始只会显示到4，稍等一阵子后开始自动卷动，因而显示后半的数值。
\![set,balloonoffset,x,y] 
．改变对话框预设位置
利用此指令可将对话框设置的预设位置进行变更，在变更外形(Shell)或图形比率时可以此进行微调。


\![set,balloontimeout,时间] 
．设定对话框逾时时间
指定对话框的逾时时间(经过此时间后会自动的关闭对话框)。单位为毫秒。小于或等0的话则不会自动关闭。原始的预设值由使用者指定。此指令有效范围仅限单次脚本。


\![set,otherghosttalk,(true/false)] 
．听取其他人格对话
可以设定是否要将其他人格的对话内容通知给目前人格知道。预设为false。详细内容请参照OnOtherGhostTalk事件。


\&[ID] 
．实体参照
会根据识别子代换成其相应的文字实体参照(Character Entity Reference)。可使用HTML/3.2、4.0中所定义的所有实体符号。

范例：

\0\s[0]\&[hearts] \&[copy]\e
显示一个爱心符号和著作权符号。
\c 
．清除对话框文字
将目前作用域的对话框所显示的内容全部消去。接下来的文字会从最左上角继续输出。SSP追加了两种消去方式：

\c[char,字数] - 会删去指定字数的文字。
\c[line,行数] - 会删去指定行数(注1)的文字。
\C - 在对话的最前头使用大写的\C指令时，会保留并再次显示上次对话框所输出的文字内容，并从最底端开始输出文字。此指定只有放在脚本最前头时才有效。

注1：在此使用的行数，会把\n或\_l这类明确的换行指令视为一行。连续的\n或\_l指令也只会被视作一行。

范例：

\0\s[0]清除开始。\w9\c清除完成。\e
显示“清除开始。”后，清除掉原有文字再显示“清除完成。”。
\f[strike,ture/false] 
．设定删除线
参数为true或1时，接下来的字体会被加上删除线。参数为false或0时则变回原样。设置参数为default时变回预设值。


\f[sub,true/false] 
．设定下标字
参数为true或1时，接下来的字体会置于目前文字的右下方。参数为false或0时则变回一般字体。设置参数为default时变回预设值。

范例：

H\f[sub,true]2\f[sub,false]O
显示水的化学式。
\f[sup,true/false] 
．设定上标字
参数为true或1时，接下来的字体会置于目前文字的右上方。参数为false或0时则变回一般字体。设置参数为default时变回预设值。

范例：

\_q4πｒ\f[sup,true]3\f[sup,false]\n[half]———\n[half]　３\_q
显示球体的体积公式。
\f[underline,ture/false] 
．设定底线
参数为true或1时，接下来的字体会加注底线。参数为false或0时则变回原样。设置参数为default时变回预设值。


\n 
．换行
将对话框的文字进行换行。单独使用\n时会换行一行的高度，\n[half]则会换半行的高度。\n[150]这样的写法，则会换一行半的高度。同理可知\n等同于\n[100]，\n[half]等同于\n[50]。


\w? 
．简易等待
在对话脚本中插入等待时间，时间一过才会继续脚本的运行。可指定\w1到\w9之间的指令，\w1的等待时间为50毫秒，\w9则为450毫秒。可根据需求连续输入等待指令，例如\w8\w8总计等待800毫秒(0.8秒)。若要详细指定时间的话，请参照\_w[?]指令。

范例：

A\w2B\w4C\w6D\w8E
显示“ABCDE”，字母间会暂停一段时间才显示下一字母。
\x 
．等待点击
此指令出现后，脚本会暂停执行，直到使用者在对话框上用滑鼠点击一下。点击后，对话框会被全部清空，并继续执行脚本。

范例：

\0\s[0]\1\s[10]等待点击中。\x点击了。\e
先显示“等待点击中。”，点击后画面清空并显示“点击了。”。
\_b[档案路径,X座标,Y座标] 
．对话框显示图片
在对话框的指定座标上插入图片。以人格资料夹/ghost/master/为相对路径。X与Y座标可指定为centerx,centery，图片便会居中显示。显示的图片会以座标(0,0)的颜色作为透明色。如果不输入X、Y座标而改输入“inline”的话，会把图片加在目前最后一个文字的后面。另外还有两种选择性设置参数：

◦option=opaque - 不会将(0,0)的颜色视为透明色，因此图片完全不透明。

◦cliping=X Y X Y - 根据座标从原本的图片中切出一部份来贴出。
范例：

\_b[sample.png,centerx,9]
在对话框的行中央、列往下9间距的位置贴出sample.png。测试中。\_b[sample.png,inline]测试完成。
图片显示在“测试中。”与“测试完成。”的中间。\_b[sample.png,10,10,--option=opaque,--clipping=10 10 30 30]
截取sample.png从(10,10)到(30,30)的图片到对话框上。
\_n 
．设定自动改行
通常，文字超过对话框右端时便会自动换行，但使用此指令后将不会自动换行，直到下一个\_n出现或脚本结束为止。


\_w[时间] 
．高精度等待
可以根据中括号内的数值来精确指定等待时间，单位为毫秒。

范例：

\0\s[0]请等待一下。\_w[5000]好了。
显示“请等待一下。”后，5秒后显示“好了。”。
\__w[时间] 
．绝对时间等待
以脚本开始的时间为基准，遇到此指令后脚本暂停，直到脚本总经过时间超过此指令的指定时间后，才继续执行后面的脚本。当脚本中出现\x或\_w[clear]时，基准时间点也跟着被改变。

范例：

			"(无)",/
			"");
选项按钮 

\![set,choicetimeout,时间] 
．设定选项逾时时间
指定选项的逾时时间(经过此时间后会自动的关闭对话框)。单位为毫秒，预设值为16000毫秒。小于或等0的话则不会自动关闭。此指令有效范围仅限单次脚本。


\* 
．禁止逾时(旧规格)
在滑鼠点选任何一个选项之前，对话框都不会因逾时而关闭。由于属于旧规格，建议改用\![set,choicetimeout]指令。

范例：

\*\q[确认,yes]\n\q[取消,no]\e
显示“确认”及“取消”两个选项。此选择分歧并不会逾时。
\q[事件识别子][选项内容] 
．选项附带自动换行(旧规格)
与\q[选项内容,事件识别子]的功能一样，选项间会自动换行。因属于旧规格，现已不推荐使用。


\q[选项内容,事件识别子,r1,r2,...] 
．显示选项
显示一个可点选的项目。当滑鼠进入选项区块内时发生OnChoiceEnter事件，当选项被点选时发生OnChoiceSelect事件。若事件识别子以On为开头，将跳过OnChoiceSelect事件而直接引发名称同识别子的“On...”事件，此时此事件的reference全部前移一位。若事件识别子为一网址(http://...)，点选后会直接开启网页，等同于\j指令的作用。


\z 
．选项范围终了(旧规格)
原本必须放在选项后端作为结尾，现已无使用的必要。即使输入了也会被无视。


\_a[识别子] 
．锚点
以\_a[ID]指令到\_a之间包围起来的字串会被视为一个锚点连结。点击后会发生OnAnchorSelect事件。与一般选项指令\q的差别，在于没有选项逾时的设置。一般用来注释对话中出现的专有名词。

范例：

\0\s[0]普通的字串\_a[anc]锚点字串\_a普通的字串\e
点击“锚点字串”后，会发生reference0为“anc”的OnAnchorSelect事件。
\__q[识别子,r1,r2,...]选项内容\__q 
．选项附带自动换行
与\q[选项内容,事件识别子]的功能一样，选项会自动换行。


核心程式控制 

\![biff] 
．信件确认
检查所有e-mail帐号的信件。

范例：

\0\s[0]信件确认开始。\![biff]\e
显示“信件确认开始。”后，执行信件确认的动作。
\![bind,类型,名称,(true/false/0/1)] 
．切换衣物配件
将指定衣物配件的显示状态进行变更。在\0(主菜端)对话范围时变更主菜的衣物，在\1(副菜端)时则变更副菜的。在\p[2]以下时没有作用。若省略名称一栏，则其类型所属的所有衣物将被同时设为显示/不显示。但通常来说一个类型只需要显示一种衣物配件(总不至于把所有帽子全戴上吧…XD)，所以此功能主要用于脱下(不显示)所有的衣物配件。


\![call,ghost,人格名称] 
．呼叫人格
“呼叫”指定的人格。也就是说，在可处理复数人格的核心程式下，将会打开新的人格视窗并启动另一个人格。


\![change,balloon,对话框名称] 
．切换对话框
将对话框切换成指定的对话框。可以使用以下特殊名称：

lastinstalled - 最后安装的对话框。(SSP限定)


\![change,ghost,人格名称] 
．切换人格
将现在使用的人格切换为指定的人格。可以使用以下特殊名称：

random - 在已安装的人格中随机选一个。
sequential - 以序列的方式(根据人格选单顺序)变更人格。
lastinstalled - 最后安装的人格。(SSP限定)

范例：

\![change,ghost,さくら]
变更人格为さくら。
\![change,shell,外形名称] 
．切换外形
将使用中的外形切换成指定的外形。可以使用以下特殊名称：

lastinstalled - 最后安装的外形。(SSP限定)


\![close,inputbox,ID] 
．关闭输入框
关闭由\![open,inputbox]指令所开启的输入框。ID请输入上述指令所指定的“事件识别子”。

范例：

\0\s[0]打开输入框。\![open,inputbox,InputTest]\w9\w9关闭输入框。\![close,inputbox,InputTest]\e
显示“打开输入框。”后跳出一个输入框，0.9秒后显示“关闭输入框。”且输入框消失。
\![enter,inductionmode] 
．进入诱导模式
进入诱导模式(induction mode)。通常用于避免人格剧情中断，比被动模式的限制来得少一些。由于没有明确的无解除警告，故使用时请多加注意，别忘了加入解除的指令。诱导模式时，会有以下的限制发生：

不会进行信件确认。
线上新闻不会自动感应。
不会自动切换。
档案拖曳与安装功能无视。
OnSurfaceRestore事件不会产生。
cantalk恒为false。(OnSecondChange及OnMinuteChange事件由人格本体产生。)


\![enter,passivemode] 
．进入被动模式。
进入被动模式(passive mode)，除了滑鼠等最低限度的事件以外的事件将全部禁止，使用者几乎无法对人格进行操作。主要用于游戏、剧情等不可中断的场合。由于没有明确的无解除警告，请小心使用。如果忘记解除的话，将会陷入操作不能的状态。被动模式时，会有以下的限制发生：

右键选单不会出现。
不会进行信件确认。
线上新闻不会自动感应。
不会自动切换。
选项不会逾时。
气泡框逾时将不会消失。
档案拖曳与安装功能无视。
nar档的双击会被无视。
OnSurfaceRestore事件不会产生。
cantalk恒为false。(OnSecondChange及OnMinuteChange事件由人格本体产生。) 无法最小化。
无法关闭人格。
附注，沟通框理论上无法使用，但实际上是可以用的。另外，SSP的情况下可以使用右键选单。


\![execute,headline,线上新闻名称] 
．执行线上新闻
执行指定名称的线上新闻。


\![execute,http-get,URL] 
．档案下载
下载URL所指定的档案。当此要求被成功执行时，档案会被放置在 ghost\master\var 资料夹里面。本指令不管是执行成功或失败，皆不会产生任何事件。

范例：

\0\s[0]\![execute,http-get,http://crow.aqrs.jp/]\e
下载http://crow.aqrs.jp/index.html，其档案路径为 ghost\master\var\index.html 。
\![executesntp] 
．校准时间
由脚本来执行校准时间的操作。

范例：

\0\s[0]开始校准时间。\![executesntp]\e
显示“开始校准时间。”后，进行校准时间的工作。
\![leave,inductionmode] 
．离开诱导模式
将\![enter,inductionmode]指令所产生的诱导模式解除。详情请参阅“诱导模式”一栏。


\![leave,passivemode] 
．离开被动模式
将\![enter,passivemode]指令所产生的被动模式解除。详情请参阅“被动模式”一栏。


\![open,balloonexplorer] 
．开启对话框浏览器
开启对话框浏览器(balloon explore)，显示所有安装的对话框。

范例：

\![open,balloonexplorer]\e
开启对话框浏览器。
\![open,calendar] 
．开启日历
开启日历．行程表视窗。

范例：

\![open,calendar]
开启日历。
\![open,communicatebox] 
．开启沟通框
开启沟通框(communicate box)。输入完毕后发生OnCommunicate事件。

范例：

\![open,communicatebox]
开启沟通框。
\![open,configurationdialog] 
．开启设定对白
开启核心程式的设定对白(configuration dialog)。

范例：

\![open,configurationdialog]
开启核心程式的设定对白。
\![open,dateinput,事件识别子,(输入框逾时),(年),(月),(日)] 
．开启日期输入框
开启专门用来输入日期的输入框，输入完成后会发生OnUserInput事件。事件识别子被作为此事件的reference0内容，用来区别或作为后续事件的根据。输入框逾时以毫秒为单位，超过这个时间后对话框自动关闭。年月日可指定输入框出现时的预设日期，若不指定则使用现在的日期。
输入终了并按Enter或确认键后会发生OnUserInput事件，reference0=事件识别子，reference1=年,月,日。
当事件识别子为以On为开头的字串时，会直接发生同识别子字串的“On...”事件，同时reference也自动往前一位，即reference0=年,月,日。

范例：

\![open,dateinput,日期测试,3000,2008,2,29]\e
出现一个日期输入框，其日期显示着2008月2月29日，于3秒后关闭。若输入完成，则发生OnUserInput事件，其reference0内容即“日期测试”。
\![open,ghostexplorer] 
．开启人格浏览器
开启人格浏览器(ghost explorer)，显示已安装的所有人格。

范例：

\![open,ghostexplorer]
开启人格浏览器。
\![open,headlinesensorexplorer] 
．开启线上新闻浏览器
开启线上新闻浏览器(headline sensor explorer)。

范例：

\![open,headlinesensorexplorer]
开启线上新闻浏览器。
\![open,help] 
．开启辅助说明
开启辅助说明文件。

范例：

\![open,help]
开启辅助说明文件。
\![open,inputbox,事件识别子,(输入框逾时),(预设字串)] 
．开启输入框
开启一个单纯作为输入用的输入框。事件识别子在输入完毕后产生的OnUserInput事件里，被作为reference0而使用。输入框逾时时间以毫秒为单位，超过时间就会自动关闭输入框，并产生OnUserInputCancel事件(限SSP2.01以上版本)。预设字串的内容会在开启输入框时直接显示在输入框中。
在MATERIA与CROW的情况下，输入框出现的时候是不允许滑鼠点击等多数事件的，只有到输入完毕或逾时时才会回复。
输入完毕后会发生OnUserInput事件，且reference0=事件识别子，reference1=输入的字串。
若事件识别子以On为开头，将跳过OnUserInput事件而直接引发名称同识别子的“On...”事件。

范例：

\0\s[0]\![open,inputbox,event,5000,测试]\e
开启一个已预先输入“测试”两字的输入框，输入完成后发生OnUserInput事件，且reference0=“event”，reference1=输入的字串。
若于5秒内没完成输入的话，输入框会自动关闭并发生OnUserInputCancel事件。\0\s[0]\![open,inputbox,OnTestEvent]\e
开启一个空的输入框，输入完成后直接发生OnTestEvent事件，且reference0为输入的字串。
\![open,messenger] 
．打开网路即时通讯
打开网路即时通讯(internet messenger)。

范例：

\![open,messenger]
打开网路即时通讯。
\![open,rateofusegraphballoon] 
．显示对话框使用率
显示所有已安装对话框的使用率与时间长度。

范例：

\![open,rateofusegraphballoon]
显示对话框使用率。
\![open,rateofusegraphtotal] 
．显示人格合计使用率
显示所有已安装人格至今以来总合的启动时间之比率。

范例：

\![open,rateofusegraphtotal]
(无)
\![open,rateofusegraph] 
．显示人格使用率
显示所有已安装人格在本次执行所启动的时间之比率。

范例：

\![open,rateofusegraph]
(无)
\![open,readme] 
．开启读我文件
开启放在人格资料夹里的readme.txt文件。

范例：

\![open,readme]
开启读我文件。
\![open,shellexplorer] 
．开启外形浏览器
开启外形浏览器(shell explorer)，显示已安装的外形清单。

范例：

\![open,shellexplorer]
开启外形浏览器。
\![open,sliderinput,事件识别子,(输入框逾时),(现在值),(最小),(最大)] 
．开启滑轴输入框
开启滑轴输入框，可用滑鼠拖移中间的滑轴来改变要输入的值。事件识别子在输入完毕后产生的OnUserInput事件里，被作为reference0而使用。输入框逾时时间以毫秒为单位，超过时间就会自动关闭输入框。
现在值为滑轴最初的设定值，左为最小，右为最大。省略的时候三项的值预设为0,0,100。
输入完毕后会发生OnUserInput事件，且reference0=事件识别子，reference1=值。
若事件识别子以On为开头，将跳过OnUserInput事件而直接引发名称同识别子的“On...”事件。


\![open,surfacetest] 
．开启图像测试
开启图像测试视窗，可检视此外形所有的图像。

范例：

\![open,surfacetest]
开启图像测试视窗。
\![open,teachbox] 
．开启学习框
开启学习框(teach box)，常用于教导人格单字的输入框，让沟通与学习区隔开来。输入完成后发生OnTeach事件。

范例：

\![open,teachbox]
开启学习框。
\![open,timeinput,事件识别子,输入框逾时,时,分,秒] 
．开启时间输入框
专门用于输入时间的输入框。事件识别子在输入完毕后产生的OnUserInput事件里，被作为其事件的reference0而使用。输入框逾时时间以毫秒为单位，超过时间就会自动关闭输入框。时分秒可省略，省略时则显示现在的时间。
输入完毕后会发生OnUserInput事件，且reference0=事件识别子，reference1=时,分,秒。
若事件识别子以On为开头，将跳过OnUserInput事件而直接引发名称同识别子的“On...”事件。


\![set,windowstate,!stayontop] 
．取消最上层显示
将人格的显示状况设为不显示在最上层。


\![set,windowstate,minimize] 
．人格最小化
将人格缩小到工具列，停止显示外形、对话框，并暂停一部份的事件活动。


\![set,windowstate,stayontop] 
．指定最上层显示
将人格的显示状况设为保持显示在最上层。


\![update,platform] 
．核心程式更新
SSP2.00后实装的功能，目前仅能确认是否有新版本，还无法实际进行更新。但今后有可能被实装。


\+ 
．随机切换人格(旧规格)
随机切换成目前已安装的任意一个人格。由于属于旧规格，建议改用\![change,ghost,random]指令。


\6 
．校准时间
开始校准时间。请勿在OnSNTPCorrect事件内使用此指令，会造成事件的死回圈。


\v 
．最上层显示
使用此指令后，人格会显示在桌面的最上层。由于使用者侧会自行指定其显示状态，非必要的情况下请少用此指令。


\_+ 
．循序切换人格(旧规格)
遵循现有的已安装人格清单，切换成清单中目前人格的下一位人格。由于属于旧规格，建议改用\![change,ghost,sequential]指令。


\__t 
．开启学习框
开启学习框(teach box)，常用于教导人格单字的输入框，让沟通与学习区隔开来。输入完成后发生OnTeach事件。由于属于旧规格，建议改用\![open,teachbox]指令。


字形颜色 

\f[bold,true/false] 
．设定粗体字
参数为true或1时，改变接下来的字体为粗体字。参数为false或0时则变回一般字体。设置参数为default时变回预设值。


\f[color,R,G,B] 
．设定字体颜色
将字体改成指定的颜色。设置参数为default时变回预设值。


\f[cursorcolor,R,G,B] or \f[cursorbrushcolor,R,G,B] 
．设定选项方块颜色
将包覆选项文字的方形区块之颜色改成指定的颜色。设置参数为default时变回预设值。


\f[cursorfontcolor,R,G,B] 
．设定选项文字颜色
将选项内的文字改成指定的颜色。设置参数为default时变回预设值。


\f[cursormethod,描绘方法] 
．设定描绘方法
变更描绘方法。使用Win32API的SetROP2函式而使得全Operator指定变得可能。设置参数为default时变回预设值。


\f[cursorpencolor,R,G,B] 
．设定选项下标线颜色
将选项的下标线颜色改成指定的颜色。设置参数为default时变回预设值。


\f[cursorstyle,类型] 
．设定选项标记
将选项的标记方式改成指定的类型。有以下三种表现方式：

square - 填满文字背景色。
underline - 显示下标线。
square+underline - 填满背景色并加下标线。

设置参数为default时变回预设值。


\f[default] 
．初始化字体
将所有的对话框属性改回预设值。


\f[height,数字] 
．设定字体大小
将文字的大小改为指定的高度。设置参数为default时变回预设值。


\f[italic,true/false] 
．设定斜体字
参数为true或1时，改变接下来的字体为斜体字。参数为false或0时则变回一般字体。设置参数为default时变回预设值。


\f[name,字形名称] 
．设定字形
将使用的字形改为指定的字形名称。设置参数为default时变回预设值。


\f[shadowcolor,R,G,B] 
．设定文字阴影色
将文字的阴影色改为指定的颜色。设置参数为default时变回预设值。


音效 

\![sound,cdplay,音轨No.] 
．播放CD音乐
播放CD音乐。


\![sound,loop,档案路径] 
．循环播放音乐
循环播放音乐。


\![sound,pause] 
．暂停音乐播放
暂停音乐播放。


\![sound,play,档案路径] 
．播放音乐
开始播放音乐。


\![sound,resume] 
．继续音乐播放
继续播放被暂停的音乐。


\![sound,stop] 
．停止音乐播放
将音乐停止，下次播放时会重头开始。


\![sound,wait] 
．等待音乐结束
会暂时停止脚本的进行，直到音乐结束再继续。


\8[档案路径] 
．播放音效(旧规格)
播放WAV音效档。由于属于旧规格，建议改用\![sound]系列语法。


\_V 
．等待音乐结束(旧规格)
会暂时停止脚本的进行，直到音乐结束再继续。


\_v[档案路径] 
．播放音乐(旧规格)
开始播放音乐。


系统操作 

\![open,browser,URL] 
．开启网页
开启浏览器，并显示指定的URL网页。

范例：

\0s[0]\![open,browser,http://cuc2.idv.tw/index.php]\e
浏览器打开，并显示http://cuc2.idv.tw/index.php的网页内容。
\![open,file,档案名称] 
．开启档案
开启指定的档案。当指定的档案为执行档(应用程式)的时候直接执行此档案，其他类型的档案则以与此档关联的应用程式来开启档案。

范例：

\![open,file,descript.txt]
开启ghost\master\descript.txt文件档。
\![open,mailer,(参数)] 
．开始写信
开启mailer写信。参数可复数指定，即mailer开启时的参数，也可省略。

范例：

\![open,mailer]
开启mailer。
\![set,wallpaper,档案路径] 
．变更桌布
将指定的档案设为桌面背景图片。


\![set,trayballoon,(Option),(Option),...] 
．显示工具列对话框
在桌面工具列上的图示上显示一个Windows通知框，限用于Windows 2000/Me以后版本。根据结果会发生OnTrayBalloonClick或OnTrayBalloonTimeout事件，详细内容请参照此二事件参照列表。
Option的项目次数及顺序没有限制，根据类型分为以下几种：

◦title=(标题) - 对话框的标题(粗体部份)所显示的字串。

◦text=(内容) - 对话框显示的字串，复数指定的话就会显示复数行。

◦icon=(图示种类) - 设定对话框的图示，标准设定为none。info = 情报图示(蓝色的ｉ)。
error = 错误图示(红色的ｘ)。
warning = 警告图示(黄色的！)。
none = 无。

◦timeout=(秒数) - 指定对话框的自动消去时间。
范例：

\![set,trayballoon,--icon=info,--timeout=10,--title=测试！,--text=第一行。,--text=第二行。]
桌面工具列上跳出一个标题为“测试！”，图示为资讯图示，内容为两行字串的Windows通知框。
\![set,trayicon,图示所在路径] 
．更改人格图示
改变桌面工具列上的人格图示，档案以ghost/master/为相对路径。


\j[URL] 
．开启指定网址
可以在网页浏览器中开启指定的网址。当以file://作为开头时，也能开启指定的档案文件或是应用程式。

范例：

\j[http://crow.aqrs.jp/]\e
在浏览器中开启http://crow.aqrs.jp/网址。\j[file://descript.txt]\e
以关联于此副档名的应用程式(一般为Windows记事本)来开启ghost/master/descript.txt档案。
\m[讯息,WPARAM,LPARAM] 
．DirectSSTP送信
对原DirectSSTP送信方发出指定的讯息。无法以含有HWnd标头的SSTP通讯方式来使用。此为Windows的固有规格。


全体控制 

\e 
．脚本终了
意味着脚本到此结束，往后的脚本将不会被执行。除了少部份的事件不可以此作完结外，其余脚本都应将此指令放在脚本终端。

范例：

\0\s[0]123\e456
由于\e中途插入的关系，此脚本只会显示“123”。
\t 
．开始关键对话
进入关键对话模式(Critical Session)。此时双击滑鼠、右键点击等滑鼠动作全部无效，AI对话、线上新闻及信件确认等功能也全部沉默。作用周期从指令开始直到\e出现或脚本结束为止。

范例：

\0\s[0]\t这是关键对话。\x\e
显示“这是关键对话。”
\_! 
．跳脱指令(旧规格)
由此开始直到下一个\_!或\e为止的脚本都不会被当作指令来解释，而是单纯的输出在对话框上。由于档案路径中可能含有“_!”这类的字串而造成语法错误，建议改用具有相同功能的\_?指令。


\_? 
．跳脱指令
由此开始直到下一个\_?或\e为止的脚本都不会被当作指令来解释，而是单纯的输出在对话框上。


\_l[x座标,y座标] 
．指定文字输出位置
可以根据座标来决定文字要输出的位置。可使用“centerx”、“centery”来指定对话框中央的座标位置，或是使用“-”来沿用目前的轴座标。要是指定座标为对话框之外的话，只有上天才知道会发生什么事情。

范例：

\0\s[0]\_l[centerx,0]１\_l[-,10]２\e
于对话框顶端的行中央开始，斜向显示“１”、“２”两个数字。
\_m[?] 
．置入ASCII编码
以ASCII编码的方式，直接置入文字字元。

范例：

\0\s[0]\_m[0x30]\e
显示“0”。
\_q 
．速读模式
输出文字时没有等待时间，会一口气显示到下一个\_q出现或脚本结束前的文字区段。


\_u[?] 
．置入UCS-2编码
以UCS-2编码的方式，直接置入文字字元。

范例：

\0\s[0]\_u[0x2665]\e
显示一个爱心符号。
动画绘图 

\![anim,clear,ID] 
．动画强制中断
强制中断指定的动画ID之动画。

范例：

\s[0]\i[2]\w9\w9\![anim,clear,2]
播放ID=2的动画，然后在0.9秒后中断此动画。
\![anim,offset,ID,X座标,Y座标] 
．动画位置指定
指定某动画的偏移量(显示位置)。

范例：

\0\s[0]\i[2]\![anim,offset,2,20,0]\e
播放ID=2的动画，并且下移20像素。
\![anim,pause,ID] 
．动画暂停
暂时停止被指定的动画。

范例：

\s[0]\i[2]\w9\w9\![anim,pause,2]\w9\w9\![anim,resume,2]
播放ID=2的动画0.9秒后，动画暂时停止，经过0.9秒后继续播放。
\![anim,resume,ID] 
．动画继续
继续播放被\![anim,pause,ID]指令所暂停的动画。

范例：

\s[0]\i[2]\w9\w9\![anim,pause,2]\w9\w9\![anim,resume,2]
播放ID=2的动画0.9秒后，动画暂时停止，经过0.9秒后继续播放。
\![lock,repaint] 
．停止再绘图
在\![unlock,repaint]指令还没执行之前，停止一切的绘图行为。会影响整个核心程式，对话框也将无法显示。SSP的情况下效果仅限于此脚本。

范例：

\0\s[0]\w9\w9\s[10]\w9\w9\s[0]\![lock,repaint]\w9\w9\s[10]\w9\w9\s[0]\![unlock,repaint]\e
主菜图像显示，0.9秒后换为副菜图像，0.9秒后再换回主菜图像。接下来此动作重复一次，但因为停止再绘图指令的关系而看不到图片的切换。
\![set,alignmenttodesktop,位置] 
．设定人格视窗位置
设定现在使用的人格角色之视窗位置在桌面上的移动方式。位置有以下几种：

top - 贴附上侧移动。
bottom - 贴附下侧移动。
free - 自由移动。

范例：

\0\s[0]\![set,alignmentondesktop,top]贴附到荧幕上端。\e
人格黏附到荧幕顶端后，显示“贴附到荧幕上端”。
\![set,alpha,不透明度%] 
．设定图像不透明度
设定图像的不透明度。在不支援透明度的OS系统下无法使用。


\![set,scaling] 
．设定图像放大率
可指定图像(Surface)的放大比率。指定数值的单位为％。负值时则有左右／上下反转的效果。

范例：

\![set,scaling,300]
等比放大为3倍大小。\![set,scaling,200,50]
长度变为两倍，宽度变为一半。\![set,scaling,-100,100]
左右反转。
\![unlock,repaint] 
．允许再描绘
将\![lock,repaint]指令所禁止的再描绘功能重新启用。


\i[ID] or \i? 
．指定动画播放
要求目前所在的图像(Surface)的动画ID开始播放。动画ID为surface.txt中所定义的编号，例如animation2.interval,never的情况下，其ID即为“2”。藉由这样的方式，脚本便能更加细致的操作动画的效果。

范例：

\s[0]\i[1]
播放在surface0定义中动画ID为1的动画。
\s[ID] 
．切换图像
将目前作用域所使用的图像(Surface)改换为指定ID的图像。当ID为-1时，图像将被隐藏。当图像设置文件中有设置图像的别名(alias)时，括号内也可以是一字串。


插件操作 

\![raiseplugin,外挂ID,事件识别子,r0,r1,r2...] 
．触发外挂事件(ID)
对指定的外挂事件进行触发。“外挂ID”请输入descript.txt内所写的ID。


\![raiseplugin,外挂名称,事件识别子,r0,r1,r2...] 
．触发外挂事件(名称)
对指定的外挂传递讯息。
